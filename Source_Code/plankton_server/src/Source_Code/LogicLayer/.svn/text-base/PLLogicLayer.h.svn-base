/*
 * PLLogicLayer.h
 *
 *  Created on: Jan 30, 2013
 *      Author: joshuakuai
 */

#ifndef PLLOGICLAYER_H_
#define PLLOGICLAYER_H_
#include <string>
#include "LogicUserManagement/LLLogicUserManagement.h"
#include "LogicParticleBattle/LLLogicParticleBattle.h"

using namespace std;

class PLLogicLayer {
public:
	//单例方法
    static PLLogicLayer * Instance()
    {
           if( 0 == _instance)
           {
                  _instance = new PLLogicLayer;
           }
           return _instance;
    }

    //释放方法
    static void Release()
    {
        if(NULL != _instance)
        {
            delete _instance;
            _instance = NULL;
        }
    }

	string excuteRequestWithLogicTypeAndVersion(string content,short type,short version);

protected:
	static PLLogicLayer* _instance;

	//构造函数
	PLLogicLayer()
	{
		_userManagementLogicExcutor = new LLLogicUserManagement;
		_particleLogicExcutor = new LLLogicParticleBattle;
	}

	//析构
	virtual ~PLLogicLayer()
	{
		delete _userManagementLogicExcutor;
		delete _particleLogicExcutor;
	}

	//用户管理逻辑器
	LLLogicUserManagement *_userManagementLogicExcutor;

	//粒子战争逻辑器
	LLLogicParticleBattle *_particleLogicExcutor;
};

#endif /* PLLOGICLAYER_H_ */
